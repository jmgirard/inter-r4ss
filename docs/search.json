[
  {
    "objectID": "Day1/day1A.html",
    "href": "Day1/day1A.html",
    "title": "Day 1A",
    "section": "",
    "text": "We begin with an overview of the workshop and a quick refresher of fundamental R programming concepts. We will then learn about using Quarto to produce beautiful documents that combine code, output, and formatted text. Finally, we will learn about transforming data within tibbles using functions from the tidyverse package."
  },
  {
    "objectID": "Day1/day1A.html#slides",
    "href": "Day1/day1A.html#slides",
    "title": "Day 1A",
    "section": "Slides",
    "text": "Slides\n\n\nClick here to view the slides in their own window."
  },
  {
    "objectID": "Day1/day1A.html#data-files",
    "href": "Day1/day1A.html#data-files",
    "title": "Day 1A",
    "section": "Data Files",
    "text": "Data Files\n\ncereal (cereal‚Äôs nutritional information and rating)"
  },
  {
    "objectID": "Day1/day1A.html#practice-1",
    "href": "Day1/day1A.html#practice-1",
    "title": "Day 1A",
    "section": "Practice 1",
    "text": "Practice 1\nCreate a new Quarto document for this activity and save it in your new project folder with the naming convention you decided on in Question 1. Clear out the boilerplate text and create a new R code chunk. Inside this code chunk, use R as a calculator to answer the following question: If it costs $100 for each professor and $25 for each student to register for a conference, how much would it cost in total for a department of 8 professors and 20 students to register? Check that the code is working by running the chunk. Once it is giving the correct answer, render the Quarto document to an HTML file and preview it in the Viewer.\n\n\n\nClick here for the answer key\n\n\nYour .qmd file should look something like this (the header is optional):\n---\ntitle: \"Conference Costs\"\nformat: html\n---\n\n```{r}\n100 * 8 + 25 * 20\n```\nYour R output should tell you that the total cost would be $1300."
  },
  {
    "objectID": "Day1/day1A.html#practice-2",
    "href": "Day1/day1A.html#practice-2",
    "title": "Day 1A",
    "section": "Practice 2",
    "text": "Practice 2\nUse markdown to add some formatted text before and after the code chunk in your Quarto document. Before the chunk, describe in text what your code chunk is doing and why. Format some of the text using italics, bold, etc. Add an image below the chunk showing people at a conference (e.g., https://i.imgur.com/houkSmT.jpeg)\n\n\n\nClick here for the answer key\n\n\nYour .qmd file should look something like this (the header is optional):\n---\ntitle: \"Conference Costs\"\nformat: html\n---\n\n**How much will it cost** to register our *whole department* to attend the conference? With 8 professors and 20 students, at a price of \\$100 per professor and \\$25 per student, the total cost will be:\n\n```{r}\n100 * 8 + 25 * 20\n```\n\n![](https://i.imgur.com/houkSmT.jpeg)"
  },
  {
    "objectID": "Day1/day1A.html#practice-3",
    "href": "Day1/day1A.html#practice-3",
    "title": "Day 1A",
    "section": "Practice 3",
    "text": "Practice 3\nLoad in the economics tibble (included in {tidyverse}). Then create a pipeline to accomplish the following steps, saving the output to a new tibble called unemp and printing it:\n\nCalculate a new variable called rate by dividing unemploy (the number of unemployed, in thousands) by pop (the total population, in thousands).\nThen drop (i.e., unselect) the pce, uempmed, and psavert variables from the tibble.\n\n\n\n\nClick here for the answer key\n\n\nFinal Pipeline:\n\nlibrary(tidyverse)\nunemp &lt;- \n  economics |&gt; \n  mutate(rate = unemploy / pop) |&gt; \n  select(-pce, -uempmed, -psavert) |&gt; \n  print()\n\n# A tibble: 574 √ó 4\n   date          pop unemploy   rate\n   &lt;date&gt;      &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 1967-07-01 198712     2944 0.0148\n 2 1967-08-01 198911     2945 0.0148\n 3 1967-09-01 199113     2958 0.0149\n 4 1967-10-01 199311     3143 0.0158\n 5 1967-11-01 199498     3066 0.0154\n 6 1967-12-01 199657     3018 0.0151\n 7 1968-01-01 199808     2878 0.0144\n 8 1968-02-01 199920     3001 0.0150\n 9 1968-03-01 200056     2877 0.0144\n10 1968-04-01 200208     2709 0.0135\n# ‚Ñπ 564 more rows"
  },
  {
    "objectID": "Day1/day1A.html#practice-4",
    "href": "Day1/day1A.html#practice-4",
    "title": "Day 1A",
    "section": "Practice 4",
    "text": "Practice 4\nDownload the ‚Äúcereal.csv‚Äù data file (linked above), copy it to your Project folder, and read it into R as a tibble. Then create a pipeline to produce a short list of cereals for me to try. I am only interested in cold cereals with a rating greater than 70. Please arrange the list so that the cereals with the fewest calories are displayed at the top. Save the result as a tibble called jeffs_list (I expect it to be even more popular than Craig‚Äôs list üôÉ) and print it.\n\n\n\nClick here for the answer key\n\n\n\njeffs_list &lt;- \n  read_csv(\"cereal.csv\")  |&gt; \n  filter(type == \"cold\" & rating &gt; 70) |&gt; \n  arrange(calories) |&gt; \n  print()\n\n# A tibble: 2 √ó 8\n  name                      mfr      type  calories sodium carbo sugars rating\n  &lt;chr&gt;                     &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 All-Bran with Extra Fiber Kelloggs cold        50    140     8      0   93.7\n2 Shredded Wheat 'n'Bran    Nabisco  cold        90      0    19      0   74.5"
  },
  {
    "objectID": "Day1/day1A.html#practice-5",
    "href": "Day1/day1A.html#practice-5",
    "title": "Day 1A",
    "section": "Practice 5",
    "text": "Practice 5\nTwo other useful column verbs are rename() and relocate(). You can use rename(x, new_name = old_name) to rename a variable in a tibble. You can use relocate(x, var_to_move, .before = other_var) to move a variable before another variable or relocate(x, var_to_move, .after = other_var) to move a variable after another variable. These verbs won‚Äôt be on the assignment, but are useful to play around with.\n\nTry to rename the uempmed variable in the economics tibble to duration.\nTry to move the unemploy variable in the economics tibble to come after the date variable.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nlibrary(tidyverse)\nrename(economics, duration = uempmed)\n\n# A tibble: 574 √ó 6\n   date         pce    pop psavert duration unemploy\n   &lt;date&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 1967-07-01  507. 198712    12.6      4.5     2944\n 2 1967-08-01  510. 198911    12.6      4.7     2945\n 3 1967-09-01  516. 199113    11.9      4.6     2958\n 4 1967-10-01  512. 199311    12.9      4.9     3143\n 5 1967-11-01  517. 199498    12.8      4.7     3066\n 6 1967-12-01  525. 199657    11.8      4.8     3018\n 7 1968-01-01  531. 199808    11.7      5.1     2878\n 8 1968-02-01  534. 199920    12.3      4.5     3001\n 9 1968-03-01  544. 200056    11.7      4.1     2877\n10 1968-04-01  544  200208    12.3      4.6     2709\n# ‚Ñπ 564 more rows\n\n\nPart (b)\n\nrelocate(economics, unemploy, .after = date)\n\n# A tibble: 574 √ó 6\n   date       unemploy   pce    pop psavert uempmed\n   &lt;date&gt;        &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 1967-07-01     2944  507. 198712    12.6     4.5\n 2 1967-08-01     2945  510. 198911    12.6     4.7\n 3 1967-09-01     2958  516. 199113    11.9     4.6\n 4 1967-10-01     3143  512. 199311    12.9     4.9\n 5 1967-11-01     3066  517. 199498    12.8     4.7\n 6 1967-12-01     3018  525. 199657    11.8     4.8\n 7 1968-01-01     2878  531. 199808    11.7     5.1\n 8 1968-02-01     3001  534. 199920    12.3     4.5\n 9 1968-03-01     2877  544. 200056    11.7     4.1\n10 1968-04-01     2709  544  200208    12.3     4.6\n# ‚Ñπ 564 more rows"
  },
  {
    "objectID": "Day1/day1A.html#readings",
    "href": "Day1/day1A.html#readings",
    "title": "Day 1A",
    "section": "Readings",
    "text": "Readings\n\nHello, Quarto from Quarto website\nMarkdown Basics from Quarto website\nChapter 29: Quarto from R4DS (2E)\nChapter 4: Data transformation from R4DS (2E)\nChapter 5: Code Style from R4DS (2E)"
  },
  {
    "objectID": "Day1/day1A.html#fun-stuff",
    "href": "Day1/day1A.html#fun-stuff",
    "title": "Day 1A",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nStunt Rope\nThese are some advanced wrangling verbs‚Ä¶\n\n\n\nPipeline\nThe official theme song of pipelines everywhere‚Ä¶\n\n\nContinue to Day 1B Materials¬†¬†¬ª"
  },
  {
    "objectID": "Day1/day1B.html",
    "href": "Day1/day1B.html",
    "title": "Day 1B",
    "section": "",
    "text": "We continue after lunch with a deep dive into the fundamentals of data visualization in R using the ggplot2 package (part of the tidyverse). This will include a conceptual overview of the grammar of graphics and hands-on practice creating scatterplots, variation plots, and covariation plots."
  },
  {
    "objectID": "Day1/day1B.html#slides",
    "href": "Day1/day1B.html#slides",
    "title": "Day 1B",
    "section": "Slides",
    "text": "Slides\n\n\nClick here to view the slides in their own window."
  },
  {
    "objectID": "Day1/day1B.html#data-files",
    "href": "Day1/day1B.html#data-files",
    "title": "Day 1B",
    "section": "Data Files",
    "text": "Data Files\n\nsalaries (professors‚Äô salaries by rank, discipline, etc.)"
  },
  {
    "objectID": "Day1/day1B.html#practice-1",
    "href": "Day1/day1B.html#practice-1",
    "title": "Day 1B",
    "section": "Practice 1",
    "text": "Practice 1\nFor each of the following code snippets, find and fix the error(s).\n\n‚ÄúThe Scatterbrained Scatterplot‚Äù\n\n\nggplot(mpg, x = displ, y = hwy) + \n  geom_point()\n\n\n‚ÄúNot-so-smooth Smoothing‚Äù\n\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point()\n  geom_smooth(shape = \"triangle\")\n\n\n‚ÄúA Leaky Pipeline‚Äù\n\n\nggplot(economics, aes(x = date, y = unemploy)) |&gt; \n  geom_point()\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\nThe code forgot to put the mappings inside aes().\n\nlibrary(tidyverse)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() \n\n\n\n\nPart (b)\nThe code tried to set the shape aesthetic for the wrong geom (smooths don‚Äôt have shapes).\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(shape = \"triangle\") +\n  geom_smooth()\n\n\n\n\nPart (c)\nThe code used pipes instead of plus signs to connect ggplot2 commands.\n\nggplot(economics, aes(x = date, y = unemploy)) +\n  geom_point()"
  },
  {
    "objectID": "Day1/day1B.html#practice-2",
    "href": "Day1/day1B.html#practice-2",
    "title": "Day 1B",
    "section": "Practice 2",
    "text": "Practice 2\n\nInstall and load the {palmerpenguins} package.\nRecreate the following graphic as closely as you can from the penguins tibble in that package (don‚Äôt worry about getting the point size exactly right).\n\n\n\n\n\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\n# Extra pane &gt; Packages tab &gt; Install button &gt; palmerpenguins &gt; Install\n# Or, in console: install.packages(palmerpenguins)\n\nlibrary(palmerpenguins)\n\nAnswer (b)\n\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm,\n                     color = species, shape = species)) +\n  geom_point(size = 2)"
  },
  {
    "objectID": "Day1/day1B.html#practice-3",
    "href": "Day1/day1B.html#practice-3",
    "title": "Day 1B",
    "section": "Practice 3",
    "text": "Practice 3\nCreate a plot from the following text description. Take the penguins dataset (from Question 2) and create a scatterplot where penguins with higher body mass are further to the right on the plot and penguins with higher bill depth are higher on the plot. Color each point based on which island that penguin was observed at and add a smoothing line to show the relationship between body mass and bill depth for each island.\n\n\n\nClick here for the answer key\n\n\n\nggplot(penguins, aes(x = body_mass_g, y = bill_depth_mm, color = island)) + \n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "Day1/day1B.html#practice-4",
    "href": "Day1/day1B.html#practice-4",
    "title": "Day 1B",
    "section": "Practice 4",
    "text": "Practice 4\nLoad the {palmerpenguins} package (after installing it, if you haven‚Äôt already) to gain access to the penguins dataset.\n\nCreate a visualization to depict the number of penguins from each species observed in the dataset. To match the penguin color scheme, make your bars white with thick black borders. Which species was least commonly observed?\nCreate a visualization to depict the distribution of the penguins‚Äô observed body mass (body_mass_g). You can choose whether to use a histogram or density plot. What were some common values of body mass for the observed penguins?\nUsing a tool from last week, filter the data to only include female penguins and then use it to repeat part (b). Does this plot look different than it did before?\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nggplot(penguins, aes(x = species)) + \n  geom_bar(fill = \"white\", color = \"black\", linewidth = 2)\n\n\n\n\nThe chinstrap species was the least commonly observed.\nPart (b)\n\nggplot(penguins, aes(x = body_mass_g)) + \n  geom_density(linewidth = 2, fill = \"white\")\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nMost of the penguins were around 3500 g, but the masses ranged from a bit below 3000 to a bit above 6000.\nPart (c)\n\npenguinsF &lt;- penguins |&gt; filter(sex == \"female\")\nggplot(penguinsF, aes(x = body_mass_g)) + \n  geom_density(linewidth = 2, fill = \"white\")\n\n\n\n\nYes, it has two humps (i.e., common values) now: around 3500 and around 4750. We call this shape a ‚Äúbimodal‚Äù distribution."
  },
  {
    "objectID": "Day1/day1B.html#practice-5",
    "href": "Day1/day1B.html#practice-5",
    "title": "Day 1B",
    "section": "Practice 5",
    "text": "Practice 5\nUse the unfiltered penguins dataset to answer these questions as well.\n\nUse the boxplot geom to depict the distribution of penguins‚Äô body mass by species. Which species is the most massive?\nUse the density geom to depict the distribution of penguins‚Äô body mass by sex. Does there appear to be a sex difference in the body mass distributions?\nCreate a visualization to depict which penguin species were observed the most (and the least) at each island. Which species was observed across the highest number of islands?\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nggplot(penguins, aes(x = body_mass_g, y = species)) + geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nThe Gentoo species have the highest body mass distribution.\nPart (b)\n\nggplot(penguins, aes(x = body_mass_g, color = sex)) + \n  geom_density(linewidth = 1)\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nThe male distribution seems shifted higher relative to the female distribution, though the two overlap.\nPart (c)\n\nggplot(penguins, aes(x = species, y = island)) + \n  geom_jitter(width = 0.25, height = 0.25)\n\n\n\n\nThe Adelie species was the only one observed at all three islands."
  },
  {
    "objectID": "Day1/day1B.html#practice-6",
    "href": "Day1/day1B.html#practice-6",
    "title": "Day 1B",
    "section": "Practice 6",
    "text": "Practice 6\nUse the mpg dataset (included in {tidyverse}) to answer these questions.\n\nCreate a scatterplot to depict the relationship between engine size (displ) and highway fuel efficiency (hwy).\nModify your plot from part (a) to add a reference line to this plot showing where highway fuel efficiency equals 25 miles per gallon; make the line orange, 1mm thick, and displayed behind/below the points.\nFinally, modify your plot from part (b) to randomly push each point a small amount. This will make it easier to see when there are multiple overlapping points, i.e., cars with the same engine size and highway fuel efficiency.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\n\n\n\n\nPart (b)\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_hline(yintercept = 25, color = \"orange\", linewidth = 1) +\n  geom_point()\n\n\n\n\nPart (c)\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_hline(yintercept = 25, color = \"orange\", linewidth = 1) +\n  geom_jitter()\n\n\n\n\nJittering can be helpful for continuous variables too! Consider this whenever you have overlapping points."
  },
  {
    "objectID": "Day1/day1B.html#readings",
    "href": "Day1/day1B.html#readings",
    "title": "Day 1B",
    "section": "Readings",
    "text": "Readings\n\nChapter 2: Data visualization from R4DS (2E)\nSection 5.4: ggplot2 code style from R4DS (2E)\nChapter 10: Layers from R4DS (2E)\nChapter 11: Exploratory Data Analysis from R4DS (2E)\nChapter 2: First steps from GGPB (3E)\nChapter 3: Individual Geoms from GGPB (3E)\nChapter 4: Collective Geoms from GGPB (3E)\nChapter 13: Building a plot layer by layer from GGPB (3E)"
  },
  {
    "objectID": "Day1/day1B.html#fun-stuff",
    "href": "Day1/day1B.html#fun-stuff",
    "title": "Day 1B",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nDon McMillan‚Äôs Greatest Charts\nWould these have be more or less funny if Don had used R?\n\n\nContinue to Day 2A Materials¬†¬†¬ª"
  },
  {
    "objectID": "Day2/day2A.html",
    "href": "Day2/day2A.html",
    "title": "Day 2A",
    "section": "",
    "text": "We begin with a discussion of how to summarize data in tibbles (which is like folding down all rows into a single row) and by group in tibbles (which is like folding down to one row per group). We will also learn about combining grouping with the mutate function, how to use conditional logic (or control flow) while wrangling, how to quickly and conveniently select columns in a tibble, and how to do basic iteration within a tibble (e.g., repeating the same operation across columns)."
  },
  {
    "objectID": "Day2/day2A.html#slides",
    "href": "Day2/day2A.html#slides",
    "title": "Day 2A",
    "section": "Slides",
    "text": "Slides\n\n\nClick here to view the slides in their own window."
  },
  {
    "objectID": "Day2/day2A.html#practice-1",
    "href": "Day2/day2A.html#practice-1",
    "title": "Day 2A",
    "section": "Practice 1",
    "text": "Practice 1\nSummarize the txhousing tibble (included in {tidyverse}) to recreate the following tibble (where n_obs is the number of observations, n_cities is the number of unique/distinct cities, mdn_listings is the median number of monthly listings, max_listings is the maximum number of monthly listings). Ignore/remove any missing values when calculating the last two summary variables.\n\n\n# A tibble: 1 √ó 4\n  n_obs n_cities mdn_listings max_listings\n  &lt;int&gt;    &lt;int&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1  8602       46         1283        43107\n\n\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\ntxhousing |&gt; \n  summarize(\n    n_obs = n(),\n    n_cities = n_distinct(city),\n    mdn_listings = median(listings, na.rm = TRUE),\n    max_listings = max(listings, na.rm = TRUE)\n  )\n## # A tibble: 1 √ó 4\n##   n_obs n_cities mdn_listings max_listings\n##   &lt;int&gt;    &lt;int&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n## 1  8602       46         1283        43107"
  },
  {
    "objectID": "Day2/day2A.html#practice-2",
    "href": "Day2/day2A.html#practice-2",
    "title": "Day 2A",
    "section": "Practice 2",
    "text": "Practice 2\nSummarize the txhousing tibble to recreate the following tibble (where m_price is the mean of the median variable and s_price is the standard deviation of the median variable, both per city-year combination).\n\n\n# A tibble: 736 √ó 4\n   city     year m_price s_price\n   &lt;chr&gt;   &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Abilene  2000  66600    5714.\n 2 Abilene  2001  70975    6331.\n 3 Abilene  2002  68600    6756.\n 4 Abilene  2003  71933.   5598.\n 5 Abilene  2004  74867.   7892.\n 6 Abilene  2005  87592.  10139.\n 7 Abilene  2006 100292.   5187.\n 8 Abilene  2007 103650   10931.\n 9 Abilene  2008 107133.  10212.\n10 Abilene  2009 108367.   9850.\n# ‚Ñπ 726 more rows\n\n\n\n\n\nClick here for the answer key\n\n\n\ntxhousing |&gt; \n  summarize(\n    m_price = mean(median),\n    s_price = sd(median),\n    .by = c(city, year)\n  )\n## # A tibble: 736 √ó 4\n##    city     year m_price s_price\n##    &lt;chr&gt;   &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n##  1 Abilene  2000  66600    5714.\n##  2 Abilene  2001  70975    6331.\n##  3 Abilene  2002  68600    6756.\n##  4 Abilene  2003  71933.   5598.\n##  5 Abilene  2004  74867.   7892.\n##  6 Abilene  2005  87592.  10139.\n##  7 Abilene  2006 100292.   5187.\n##  8 Abilene  2007 103650   10931.\n##  9 Abilene  2008 107133.  10212.\n## 10 Abilene  2009 108367.   9850.\n## # ‚Ñπ 726 more rows"
  },
  {
    "objectID": "Day2/day2A.html#practice-3",
    "href": "Day2/day2A.html#practice-3",
    "title": "Day 2A",
    "section": "Practice 3",
    "text": "Practice 3\nUse a grouped mutate to add a new variable to the txhousing tibble that shows the average number of sales for that city in that year. Select only the city, year, month, and sales variables, in addition to the newly created variable.\n\n\n# A tibble: 8,602 √ó 5\n   city     year month sales avg_sales\n   &lt;chr&gt;   &lt;int&gt; &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 Abilene  2000     1    72      115.\n 2 Abilene  2000     2    98      115.\n 3 Abilene  2000     3   130      115.\n 4 Abilene  2000     4    98      115.\n 5 Abilene  2000     5   141      115.\n 6 Abilene  2000     6   156      115.\n 7 Abilene  2000     7   152      115.\n 8 Abilene  2000     8   131      115.\n 9 Abilene  2000     9   104      115.\n10 Abilene  2000    10   101      115.\n# ‚Ñπ 8,592 more rows\n\n\n\n\n\nClick here for the answer key\n\n\n\ntxhousing |&gt; \n  mutate(\n    avg_sales = mean(sales),\n    .by = c(city, year)\n  ) |&gt; \n  select(city, year, month, sales, avg_sales)\n## # A tibble: 8,602 √ó 5\n##    city     year month sales avg_sales\n##    &lt;chr&gt;   &lt;int&gt; &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt;\n##  1 Abilene  2000     1    72      115.\n##  2 Abilene  2000     2    98      115.\n##  3 Abilene  2000     3   130      115.\n##  4 Abilene  2000     4    98      115.\n##  5 Abilene  2000     5   141      115.\n##  6 Abilene  2000     6   156      115.\n##  7 Abilene  2000     7   152      115.\n##  8 Abilene  2000     8   131      115.\n##  9 Abilene  2000     9   104      115.\n## 10 Abilene  2000    10   101      115.\n## # ‚Ñπ 8,592 more rows"
  },
  {
    "objectID": "Day2/day2A.html#practice-4",
    "href": "Day2/day2A.html#practice-4",
    "title": "Day 2A",
    "section": "Practice 4",
    "text": "Practice 4\n\nUse if_else() to add a new variable to mpg called size that equals ‚ÄúLARGE‚Äù if class is ‚Äúsuv‚Äù, ‚Äúminivan‚Äù, or ‚Äúpickup‚Äù and equals ‚ÄúSMALL‚Äù otherwise. Then select the model, class, and size variables.\nFor practice, repeat the first part of this question but this time use case_when(). Is the Subaru Forester AWD model LARGE or SMALL?\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nmpg |&gt; \n  mutate(\n    size = if_else(\n      condition = class %in% c(\"suv\", \"minivan\", \"pickup\"),\n      true = \"LARGE\",\n      false = \"SMALL\"\n    )\n  ) |&gt; \n  select(model, class, size)\n## # A tibble: 234 √ó 3\n##    model      class   size \n##    &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;\n##  1 a4         compact SMALL\n##  2 a4         compact SMALL\n##  3 a4         compact SMALL\n##  4 a4         compact SMALL\n##  5 a4         compact SMALL\n##  6 a4         compact SMALL\n##  7 a4         compact SMALL\n##  8 a4 quattro compact SMALL\n##  9 a4 quattro compact SMALL\n## 10 a4 quattro compact SMALL\n## # ‚Ñπ 224 more rows\n\nPart (b)\n\nmpg |&gt; \n  mutate(\n    size = case_when(\n      class == \"suv\" ~ \"LARGE\",\n      class == \"minivan\" ~ \"LARGE\",\n      class == \"pickup\" ~ \"LARGE\",\n      .default = \"SMALL\"\n    )\n  ) |&gt; \n  select(model, class, size) |&gt; \n  filter(model == \"forester awd\")\n## # A tibble: 6 √ó 3\n##   model        class size \n##   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;\n## 1 forester awd suv   LARGE\n## 2 forester awd suv   LARGE\n## 3 forester awd suv   LARGE\n## 4 forester awd suv   LARGE\n## 5 forester awd suv   LARGE\n## 6 forester awd suv   LARGE\n\nThe Subaru Forester AWD is LARGE."
  },
  {
    "objectID": "Day2/day2A.html#practice-5",
    "href": "Day2/day2A.html#practice-5",
    "title": "Day 2A",
    "section": "Practice 5",
    "text": "Practice 5\n\nUse tidy selection to extract all variables that have names ending with ‚Äú_color‚Äù from the starwars tibble.\nUse tidy selection to extract the name variable and all variables from the species variable to the last variable in the starwars tibble.\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\nlibrary(tidyverse)\nstarwars |&gt; \n  select(ends_with(\"_color\"))\n## # A tibble: 87 √ó 3\n##    hair_color    skin_color  eye_color\n##    &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;    \n##  1 blond         fair        blue     \n##  2 &lt;NA&gt;          gold        yellow   \n##  3 &lt;NA&gt;          white, blue red      \n##  4 none          white       yellow   \n##  5 brown         light       brown    \n##  6 brown, grey   light       blue     \n##  7 brown         light       blue     \n##  8 &lt;NA&gt;          white, red  red      \n##  9 black         light       brown    \n## 10 auburn, white fair        blue-gray\n## # ‚Ñπ 77 more rows\n\nAnswer (b)\n\nstarwars |&gt; \n  select(name, species:last_col())\n## # A tibble: 87 √ó 5\n##    name               species films     vehicles  starships\n##    &lt;chr&gt;              &lt;chr&gt;   &lt;list&gt;    &lt;list&gt;    &lt;list&gt;   \n##  1 Luke Skywalker     Human   &lt;chr [5]&gt; &lt;chr [2]&gt; &lt;chr [2]&gt;\n##  2 C-3PO              Droid   &lt;chr [6]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n##  3 R2-D2              Droid   &lt;chr [7]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n##  4 Darth Vader        Human   &lt;chr [4]&gt; &lt;chr [0]&gt; &lt;chr [1]&gt;\n##  5 Leia Organa        Human   &lt;chr [5]&gt; &lt;chr [1]&gt; &lt;chr [0]&gt;\n##  6 Owen Lars          Human   &lt;chr [3]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n##  7 Beru Whitesun lars Human   &lt;chr [3]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n##  8 R5-D4              Droid   &lt;chr [1]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n##  9 Biggs Darklighter  Human   &lt;chr [1]&gt; &lt;chr [0]&gt; &lt;chr [1]&gt;\n## 10 Obi-Wan Kenobi     Human   &lt;chr [6]&gt; &lt;chr [1]&gt; &lt;chr [5]&gt;\n## # ‚Ñπ 77 more rows"
  },
  {
    "objectID": "Day2/day2A.html#practice-6",
    "href": "Day2/day2A.html#practice-6",
    "title": "Day 2A",
    "section": "Practice 6",
    "text": "Practice 6\n\nUse across() to apply the str_to_upper() function to the manufacturer and model variables of the mpg tibble.\nUse across() to summarize the median of every numeric variable in the diamonds tibble.\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\nmpg |&gt; \n  mutate(\n    across(\n      .cols = c(manufacturer, model), \n      .fns = str_to_upper\n    )\n  )\n## # A tibble: 234 √ó 11\n##    manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n##    &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n##  1 AUDI         A4           1.8  1999     4 auto‚Ä¶ f        18    29 p     comp‚Ä¶\n##  2 AUDI         A4           1.8  1999     4 manu‚Ä¶ f        21    29 p     comp‚Ä¶\n##  3 AUDI         A4           2    2008     4 manu‚Ä¶ f        20    31 p     comp‚Ä¶\n##  4 AUDI         A4           2    2008     4 auto‚Ä¶ f        21    30 p     comp‚Ä¶\n##  5 AUDI         A4           2.8  1999     6 auto‚Ä¶ f        16    26 p     comp‚Ä¶\n##  6 AUDI         A4           2.8  1999     6 manu‚Ä¶ f        18    26 p     comp‚Ä¶\n##  7 AUDI         A4           3.1  2008     6 auto‚Ä¶ f        18    27 p     comp‚Ä¶\n##  8 AUDI         A4 QUATTRO   1.8  1999     4 manu‚Ä¶ 4        18    26 p     comp‚Ä¶\n##  9 AUDI         A4 QUATTRO   1.8  1999     4 auto‚Ä¶ 4        16    25 p     comp‚Ä¶\n## 10 AUDI         A4 QUATTRO   2    2008     4 manu‚Ä¶ 4        20    28 p     comp‚Ä¶\n## # ‚Ñπ 224 more rows\n\nAnswer (b)\n\ndiamonds |&gt; \n  summarize(\n    across(\n      .cols = where(is.numeric), \n      .fns = median\n    )\n  )\n## # A tibble: 1 √ó 7\n##   carat depth table price     x     y     z\n##   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n## 1   0.7  61.8    57  2401   5.7  5.71  3.53"
  },
  {
    "objectID": "Day2/day2A.html#challenge-1",
    "href": "Day2/day2A.html#challenge-1",
    "title": "Day 2A",
    "section": "Challenge 1",
    "text": "Challenge 1\nRead the documentation for the first(), last(), and nth() summary functions (they all share a single documentation page). Then apply these functions to do the following: (1) calculate the average number of monthly listings in each city (removing any missing values), and then (2) find the cities with the highest, second-highest, second-lowest, and lowest average number of monthly listings.\n\n\n\nClick here for the answer key\n\n\n\ntxhousing |&gt; \n  summarize(\n    m_listings = mean(listings, na.rm = TRUE),\n    .by = city\n  ) |&gt; \n  summarize(\n    most = first(city, order_by = m_listings),\n    second_most = nth(city, n = 2, order_by = m_listings),\n    second_least = nth(city, n = -2, order_by = m_listings),\n    least = last(city, order_by = m_listings)\n  )\n## # A tibble: 1 √ó 4\n##   most       second_most second_least least  \n##   &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;        &lt;chr&gt;  \n## 1 San Marcos Nacogdoches Dallas       Houston"
  },
  {
    "objectID": "Day2/day2A.html#challenge-2",
    "href": "Day2/day2A.html#challenge-2",
    "title": "Day 2A",
    "section": "Challenge 2",
    "text": "Challenge 2\n\nLook at the code below and figure out how it works.\nAdapt this code to create four new variables called carat_minimum, carat_maximum, price_minimum, and price_maximum.\n\n\ndiamonds |&gt; \n  summarize(\n    across(\n      .cols = c(carat, price),\n      .fns = list(m = mean, s = sd),\n      .names = \"{.fn}_{.col}\"\n    )\n  )\n## # A tibble: 1 √ó 4\n##   m_carat s_carat m_price s_price\n##     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n## 1   0.798   0.474   3933.   3989.\n\n\n\n\nClick here for the answer key\n\n\n\ndiamonds |&gt; \n  summarize(\n    across(\n      .cols = c(carat, price),\n      .fns = list(minimum = min, maximum = max),\n      .names = \"{.col}_{.fn}\"\n    )\n  )\n## # A tibble: 1 √ó 4\n##   carat_minimum carat_maximum price_minimum price_maximum\n##           &lt;dbl&gt;         &lt;dbl&gt;         &lt;int&gt;         &lt;int&gt;\n## 1           0.2          5.01           326         18823"
  },
  {
    "objectID": "Day2/day2A.html#readings",
    "href": "Day2/day2A.html#readings",
    "title": "Day 2A",
    "section": "Readings",
    "text": "Readings\n\nSection 4.5: Groups from R4DS (2E)\nSelection language from tidyselect package website\nColumn-wise operation from dplyr package website\nRow-wise operation from dplyr package website"
  },
  {
    "objectID": "Day2/day2A.html#fun-stuff",
    "href": "Day2/day2A.html#fun-stuff",
    "title": "Day 2A",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nAwesome Origami\nThese are only slightly more impressive than our penguins summary tibbles‚Ä¶\n\n\nContinue to Day 2B Materials¬†¬†¬ª"
  },
  {
    "objectID": "Day2/day2B.html",
    "href": "Day2/day2B.html",
    "title": "Day 2B",
    "section": "",
    "text": "We continue after lunch by revisiting data visualization. We learn about customizing and enhancing our graphics for communication through the use of scales, labels, and themes. We also learn about advanced plot layouts using faceting and the patchwork package. Finally, we discuss exporting graphics from R to image files."
  },
  {
    "objectID": "Day2/day2B.html#slides",
    "href": "Day2/day2B.html#slides",
    "title": "Day 2B",
    "section": "Slides",
    "text": "Slides\n\n\nClick here to view the slides in their own window."
  },
  {
    "objectID": "Day2/day2B.html#practice-1",
    "href": "Day2/day2B.html#practice-1",
    "title": "Day 2B",
    "section": "Practice 1",
    "text": "Practice 1\n\nUse the penguins dataset from the {palmerpenguins} package to create a plot that maps species to the x-axis and body_mass_g to the y-axis. Add a violin geom and a jitter geom (with 0.25 width). For the jitter geom only, map sex to color.\nConfigure the y axis to range from 2500 to 6500.\nConfigure the x-axis to use the scientific names of each species (see table below)\nBonus: Suppress all messages and warnings from this chunk.\n\n\n\n\nCommon Name\nScientific Name\n\n\n\n\nAdelie\nP. adeliae\n\n\nChinstrap\nP. antarcticus\n\n\nGentoo\nP. papua\n\n\n\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_violin() + \n  geom_jitter(width = 0.25, aes(color = sex)) +\n  scale_y_continuous(limits = c(2500, 6500)) +\n  scale_x_discrete(\n    labels = c(\n      \"Adelie\" = \"P. adeliae\",\n      \"Chinstrap\" = \"P. antarcticus\",\n      \"Gentoo\" = \"P. papua\"\n    )\n  )"
  },
  {
    "objectID": "Day2/day2B.html#practice-2",
    "href": "Day2/day2B.html#practice-2",
    "title": "Day 2B",
    "section": "Practice 2",
    "text": "Practice 2\nModify your final plot from Question 1 in the following ways:\n\nGive the x-axis, y-axis, and the color scale better labels (with Title Case)\nGive the plot a descriptive title about what the graphic is about (generally) and a subtitle that describes which sex-species combination had the highest body mass.\nAdd a caption stating the source of this data (e.g., the package name)\n\n\n\n\nClick here for the answer key\n\n\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_violin() + \n  geom_jitter(width = 0.25, aes(color = sex)) +\n  scale_y_continuous(limits = c(2500, 6500)) +\n  scale_x_discrete(\n    labels = c(\n      \"Adelie\" = \"P. adeliae\",\n      \"Chinstrap\" = \"P. antarcticus\",\n      \"Gentoo\" = \"P. papua\"\n    )\n  ) +\n  labs(\n    x = \"Penguin Species\",\n    y = \"Body Mass (g)\",\n    color = \"Sex\",\n    title = \"Body Mass by Species and Sex of Penguins at Palmer Station\",\n    subtitle = \"The penguins with the highest body mass were males of the P. papua species\",\n    caption = \"Data from the {palmerpenguins} R package\"\n  )"
  },
  {
    "objectID": "Day2/day2B.html#practice-3",
    "href": "Day2/day2B.html#practice-3",
    "title": "Day 2B",
    "section": "Practice 3",
    "text": "Practice 3\nModify your final plot from Question 2 in the following ways:\n\nApply the ‚Äúclassic‚Äù complete theme using theme_classic() and change the base font size to 10.\nAdjust the legend.background element to be rectangle with color = \"black\".\nAdjust the axis.text.x element to be text with face = \"italic\".\n\n\n\n\nClick here for the answer key\n\n\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_violin() + \n  geom_jitter(width = 0.25, aes(color = sex)) +\n  scale_y_continuous(limits = c(2500, 6500)) +\n  scale_x_discrete(\n    labels = c(\n      \"Adelie\" = \"P. adeliae\",\n      \"Chinstrap\" = \"P. antarcticus\",\n      \"Gentoo\" = \"P. papua\"\n    )\n  ) +\n  labs(\n    x = \"Penguin Species\",\n    y = \"Body Mass (g)\",\n    color = \"Sex\",\n    title = \"Body Mass by Species and Sex of Penguins at Palmer Station\",\n    subtitle = \"The penguins with the highest body mass were males of the P. papua species\",\n    caption = \"Data from the {palmerpenguins} R package\"\n  ) +\n  theme_classic(base_size = 10) +\n  theme(\n    axis.text.x = element_text(face = \"italic\"),\n    legend.background = element_rect(color = \"black\")\n  )"
  },
  {
    "objectID": "Day2/day2B.html#practice-4",
    "href": "Day2/day2B.html#practice-4",
    "title": "Day 2B",
    "section": "Practice 4",
    "text": "Practice 4\nCreate a ggplot from mpg that maps displ to x and hwy to y and includes a point geom. Facet the plot such that there are seven columns showing class levels and three rows showing drv levels.\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point() + \n  facet_grid(drv~class)"
  },
  {
    "objectID": "Day2/day2B.html#practice-5",
    "href": "Day2/day2B.html#practice-5",
    "title": "Day 2B",
    "section": "Practice 5",
    "text": "Practice 5\nRecreate this figure from mpg using {ggplot2} and {patchwork}. Hint: The geoms (left-to-right) are density, bar, density, boxplot, boxplot.\nBonus: Make the top row half the height of the bottom row and add tags ‚Äúa‚Äù to ‚Äúe‚Äù.\n\n\n\n\n\n\n\n\nClick here for the answer key\n\n\n\nlibrary(patchwork)\np1 &lt;- ggplot(mpg, aes(x = hwy)) + geom_density()\np2 &lt;- ggplot(mpg, aes(x = drv)) + geom_bar()\np3 &lt;- ggplot(mpg, aes(x = cty)) + geom_density()\np4 &lt;- ggplot(mpg, aes(x = drv, y = hwy)) + geom_boxplot()\np5 &lt;- ggplot(mpg, aes(x = drv, y = cty)) + geom_boxplot()\n((p1 + p2 + p3) / (p4 + p5))\n\n\n\n\nBonus\n\n((p1 + p2 + p3) / (p4 + p5)) + \n  plot_layout(heights = c(1, 2)) +\n  plot_annotation(tag_levels = \"a\")"
  },
  {
    "objectID": "Day2/day2B.html#practice-6",
    "href": "Day2/day2B.html#practice-6",
    "title": "Day 2B",
    "section": "Practice 6",
    "text": "Practice 6\nCreate a document in PowerPoint (or equivalent program, e.g., Google Slides) and draw a box where you would put a figure. Examine that box‚Äôs size and save a ggplot in that same size. Insert your image into PowerPoint.\nBonus: Adjust the font size of your plot to be more readable in PowerPoint.\n\n# Simple example plot\nggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\n\n\n\n\nClick here for the answer key\n\n\n\np &lt;- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\nggsave(\"act3a.png\", plot = p, width = 5, height = 3, units = \"in\")\n\nBonus\n\np &lt;- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point() +\n  theme_grey(base_size = 18)\nggsave(\"act3b.png\", plot = p, width = 5, height = 3, units = \"in\")"
  },
  {
    "objectID": "Day2/day2B.html#readings",
    "href": "Day2/day2B.html#readings",
    "title": "Day 2B",
    "section": "Readings",
    "text": "Readings\n\nChapter 10: Layers from R4DS (2E)\nChapter 12: Communication from R4DS (2E)\nChapter 9: Arranging plots from GGPB (3E)\nChapter 14: Scales and guides from GGPB (3E)\nChapter 16: Faceting from GGPB (3E)\nChapter 17: Themes from GGPB (3E)"
  },
  {
    "objectID": "Day2/day2B.html#fun-stuff",
    "href": "Day2/day2B.html#fun-stuff",
    "title": "Day 2B",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nLet‚Äôs Enhance\nIf you want to be able to do this, save your graphics in a vector format‚Ä¶\n\n\nContinue to Day 3A Materials¬†¬†¬ª"
  },
  {
    "objectID": "Day3/day3A.html",
    "href": "Day3/day3A.html",
    "title": "Day 3A",
    "section": "",
    "text": "We finish up our final section on data wrangling by discussing the reshaping of columns and entire tibbles with the separate, unite, and pivot functions. We then discuss how to combine data from multiple tibbles or data files with the same/similar formats (e.g., separate files per participant) and how to join related/linked data that is spread across multiple tibbles or data files (e.g., separate files for different variables of the same participants)."
  },
  {
    "objectID": "Day3/day3A.html#slides",
    "href": "Day3/day3A.html#slides",
    "title": "Day 3A",
    "section": "Slides",
    "text": "Slides\n\n\nClick here to view the slides in their own window."
  },
  {
    "objectID": "Day3/day3A.html#data-files",
    "href": "Day3/day3A.html#data-files",
    "title": "Day 3A",
    "section": "Data Files",
    "text": "Data Files\nIf you want to follow along with the part where we read in data from multiple files, run this code to generate some example files:\n\nlibrary(tidyverse)\n\n# Create three tibbles with simulated daily diary data\ndf1 &lt;- tibble(day = 1:30, mood = round(rnorm(30, 5, 1)))\ndf2 &lt;- tibble(day = 1:30, mood = round(rnorm(30, 4, 1)))\ndf3 &lt;- tibble(day = 1:30, mood = round(rnorm(30, 4, 2)))\n\n# Create a subfolder in your project folder called data\ndir.create(\"data\")\n\n# Write each tibble to a CSV file in the data folder\nwrite_csv(df1, file = \"data/pid_001.csv\")\nwrite_csv(df2, file = \"data/pid_002.csv\")\nwrite_csv(df3, file = \"data/pid_003.csv\")"
  },
  {
    "objectID": "Day3/day3A.html#practice-1",
    "href": "Day3/day3A.html#practice-1",
    "title": "Day 3A",
    "section": "Practice 1",
    "text": "Practice 1\nExamine the table5 tibble (included in {tidyverse}) and tidy it up using separate() and unite(). End with variables for country, four-digit year (YYYY), number of tuberculosis cases, and population.\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\ntable5 |&gt; \n  unite(\n    col = \"year\",\n    century, \n    year, \n    sep = \"\"\n  ) |&gt; \n  separate_wider_delim(\n    col = rate, \n    delim = \"/\",\n    names = c(\"cases\", \"population\")\n  )\n## # A tibble: 6 √ó 4\n##   country     year  cases  population\n##   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     \n## 1 Afghanistan 1999  745    19987071  \n## 2 Afghanistan 2000  2666   20595360  \n## 3 Brazil      1999  37737  172006362 \n## 4 Brazil      2000  80488  174504898 \n## 5 China       1999  212258 1272915272\n## 6 China       2000  213766 1280428583"
  },
  {
    "objectID": "Day3/day3A.html#practice-2",
    "href": "Day3/day3A.html#practice-2",
    "title": "Day 3A",
    "section": "Practice 2",
    "text": "Practice 2\nReshape the billboard tibble (included in {tidyverse}) to a long format such that each row represents a single track‚Äôs ranking for a single week (variables: artist, track, date.entered, week, rank). For a challenge, remove the prefix from your final week variable and convert it into a numeric variable.\n\n\n\nClick here for the answer key\n\n\n\nbillboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n    names_to = \"week\", \n    values_to = \"rank\",\n    names_prefix = \"wk\", # Challenge\n    names_transform = parse_number # Challenge\n  )\n## # A tibble: 24,092 √ó 5\n##    artist track                   date.entered  week  rank\n##    &lt;chr&gt;  &lt;chr&gt;                   &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt;\n##  1 2 Pac  Baby Don't Cry (Keep... 2000-02-26       1    87\n##  2 2 Pac  Baby Don't Cry (Keep... 2000-02-26       2    82\n##  3 2 Pac  Baby Don't Cry (Keep... 2000-02-26       3    72\n##  4 2 Pac  Baby Don't Cry (Keep... 2000-02-26       4    77\n##  5 2 Pac  Baby Don't Cry (Keep... 2000-02-26       5    87\n##  6 2 Pac  Baby Don't Cry (Keep... 2000-02-26       6    94\n##  7 2 Pac  Baby Don't Cry (Keep... 2000-02-26       7    99\n##  8 2 Pac  Baby Don't Cry (Keep... 2000-02-26       8    NA\n##  9 2 Pac  Baby Don't Cry (Keep... 2000-02-26       9    NA\n## 10 2 Pac  Baby Don't Cry (Keep... 2000-02-26      10    NA\n## # ‚Ñπ 24,082 more rows"
  },
  {
    "objectID": "Day3/day3A.html#practice-3",
    "href": "Day3/day3A.html#practice-3",
    "title": "Day 3A",
    "section": "Practice 3",
    "text": "Practice 3\nReshape the table2 tibble (included in {tidyverse}) so that each row represents a single country in a single year (Hint: variables should be country, year, cases, and population).\n\n\n\nClick here for the answer key\n\n\n\ntable2 |&gt; \n  pivot_wider(names_from = type, values_from = count)\n## # A tibble: 6 √ó 4\n##   country      year  cases population\n##   &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n## 1 Afghanistan  1999    745   19987071\n## 2 Afghanistan  2000   2666   20595360\n## 3 Brazil       1999  37737  172006362\n## 4 Brazil       2000  80488  174504898\n## 5 China        1999 212258 1272915272\n## 6 China        2000 213766 1280428583"
  },
  {
    "objectID": "Day3/day3A.html#practice-4",
    "href": "Day3/day3A.html#practice-4",
    "title": "Day 3A",
    "section": "Practice 4",
    "text": "Practice 4\nInstall and load the {Lahman} package, which contains data about baseball teams and players.\n\nExplore how the People, Batting, and Salaries tables are connected.\nHow would you join this data to compare the salaries of right-handed and left-handed batters? Do so using a {tidyverse} function and select only the relevant variables.\n\nNote: These tables are data frames not tibbles (so they will print a lot of rows). To fix this, you can use x &lt;- as_tibble(x) to convert them to tibbles.\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\nAll three tables are connected via the playerID variable.\nAnswer (b)\n\nlibrary(tidyverse)\nlibrary(Lahman) # must be installed first\n\njoined_data &lt;- \n  inner_join(People, Salaries, by = \"playerID\") |&gt;  \n  select(playerID, nameFirst, nameLast, bats, yearID, teamID, salary) |&gt;\n  as_tibble() |&gt; \n  print()\n\n# A tibble: 26,428 √ó 7\n   playerID  nameFirst nameLast bats  yearID teamID  salary\n   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;    &lt;fct&gt;  &lt;int&gt; &lt;fct&gt;    &lt;int&gt;\n 1 aardsda01 David     Aardsma  R       2004 SFN     300000\n 2 aardsda01 David     Aardsma  R       2007 CHA     387500\n 3 aardsda01 David     Aardsma  R       2008 BOS     403250\n 4 aardsda01 David     Aardsma  R       2009 SEA     419000\n 5 aardsda01 David     Aardsma  R       2010 SEA    2750000\n 6 aardsda01 David     Aardsma  R       2011 SEA    4500000\n 7 aardsda01 David     Aardsma  R       2012 NYA     500000\n 8 aasedo01  Don       Aase     R       1986 BAL     600000\n 9 aasedo01  Don       Aase     R       1987 BAL     625000\n10 aasedo01  Don       Aase     R       1988 BAL     675000\n# ‚Ñπ 26,418 more rows"
  },
  {
    "objectID": "Day3/day3A.html#practice-5",
    "href": "Day3/day3A.html#practice-5",
    "title": "Day 3A",
    "section": "Practice 5",
    "text": "Practice 5\n\nJoin the band_members and band_instruments tibbles (included in {tidyverse}) using all four basic types of joins. Compare the results.\nNow join the band_members and band_instruments2 tibbles in a way that adds the instrument played by each name in band_members.\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\nleft_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 3 √ó 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n\nright_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 3 √ó 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n3 Keith &lt;NA&gt;    guitar\n\ninner_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 2 √ó 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n\nfull_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 4 √ó 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith &lt;NA&gt;    guitar\n\n\nAnswer (b)\n\nleft_join(band_members, band_instruments2, by = c(\"name\" = \"artist\"))\n\n# A tibble: 3 √ó 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass"
  },
  {
    "objectID": "Day3/day3A.html#practice-6",
    "href": "Day3/day3A.html#practice-6",
    "title": "Day 3A",
    "section": "Practice 6",
    "text": "Practice 6\nExplore what happens when you join two tables with duplicated/repeated keys.\n\nx &lt;- tibble(\n  key = c(1, 2, 2, 3),\n  val_x = c(\"x1\", \"x2\", \"x3\", \"x4\")\n)\ny &lt;- tibble(\n  key = c(1, 2, 2, 3),\n  val_y = c(\"y1\", \"y2\", \"y3\", \"y4\")\n)\n\n\n\n\nClick here for the answer key\n\n\n\nleft_join(x, y, by = \"key\")\n\nWarning in left_join(x, y, by = \"key\"): Detected an unexpected many-to-many relationship between `x` and `y`.\n‚Ñπ Row 2 of `x` matches multiple rows in `y`.\n‚Ñπ Row 2 of `y` matches multiple rows in `x`.\n‚Ñπ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 6 √ó 3\n    key val_x val_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     2 x2    y3   \n4     2 x3    y2   \n5     2 x3    y3   \n6     3 x4    y4   \n\n\nThe key gets duplicated for each pairwise combination."
  },
  {
    "objectID": "Day3/day3A.html#challenge-1",
    "href": "Day3/day3A.html#challenge-1",
    "title": "Day 3A",
    "section": "Challenge 1",
    "text": "Challenge 1\nReshape the us_rent_income tibble (included in {tidyverse}) so that each row represents a single US state (Hint: Variables should be something like: GEOID, NAME, estimate_income, estimate_rent, moe_income, and moe_rent)\n\n\n\nClick here for the answer key\n\n\n\nus_rent_income |&gt; \n  pivot_wider(\n    names_from = variable, \n    values_from = c(estimate, moe)\n  )\n## # A tibble: 52 √ó 6\n##    GEOID NAME                 estimate_income estimate_rent moe_income moe_rent\n##    &lt;chr&gt; &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n##  1 01    Alabama                        24476           747        136        3\n##  2 02    Alaska                         32940          1200        508       13\n##  3 04    Arizona                        27517           972        148        4\n##  4 05    Arkansas                       23789           709        165        5\n##  5 06    California                     29454          1358        109        3\n##  6 08    Colorado                       32401          1125        109        5\n##  7 09    Connecticut                    35326          1123        195        5\n##  8 10    Delaware                       31560          1076        247       10\n##  9 11    District of Columbia           43198          1424        681       17\n## 10 12    Florida                        25952          1077         70        3\n## # ‚Ñπ 42 more rows"
  },
  {
    "objectID": "Day3/day3A.html#readings",
    "href": "Day3/day3A.html#readings",
    "title": "Day 3A",
    "section": "Readings",
    "text": "Readings\n\nPivoting from tidy package website\nTwo-table verbs from dplyr package website\nChapter 6: Data tidying from R4DS (2E)\nSection 8.4: Reading data from multiple files from R4DS (2E)\nChapter 20: Joins from R4DS (2E)"
  },
  {
    "objectID": "Day3/day3A.html#fun-stuff",
    "href": "Day3/day3A.html#fun-stuff",
    "title": "Day 3A",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nPivot!\nIf only Chandler had studied data reshaping, he would know what pivot means‚Ä¶\n\n\n\nMerge!\nAt least he wasn‚Äôt asking to hang an ‚Äúinner join‚Äù sign‚Ä¶ ü§£\n\n\nContinue to Day 3B Materials¬†¬†¬ª"
  },
  {
    "objectID": "Day3/day3B.html",
    "href": "Day3/day3B.html",
    "title": "Day 3B",
    "section": "",
    "text": "We continue after lunch with‚Ä¶"
  },
  {
    "objectID": "Day3/day3B.html#slides",
    "href": "Day3/day3B.html#slides",
    "title": "Day 3B",
    "section": "Slides",
    "text": "Slides\n\n\nClick here to view the slides in their own window."
  },
  {
    "objectID": "Day3/day3B.html#practice-1",
    "href": "Day3/day3B.html#practice-1",
    "title": "Day 3B",
    "section": "Practice 1",
    "text": "Practice 1"
  },
  {
    "objectID": "Day3/day3B.html#practice-2",
    "href": "Day3/day3B.html#practice-2",
    "title": "Day 3B",
    "section": "Practice 2",
    "text": "Practice 2"
  },
  {
    "objectID": "Day3/day3B.html#practice-3",
    "href": "Day3/day3B.html#practice-3",
    "title": "Day 3B",
    "section": "Practice 3",
    "text": "Practice 3"
  },
  {
    "objectID": "Day3/day3B.html#readings",
    "href": "Day3/day3B.html#readings",
    "title": "Day 3B",
    "section": "Readings",
    "text": "Readings"
  },
  {
    "objectID": "Day3/day3B.html#fun-stuff",
    "href": "Day3/day3B.html#fun-stuff",
    "title": "Day 3B",
    "section": "Fun Stuff",
    "text": "Fun Stuff"
  },
  {
    "objectID": "Details/assistant.html",
    "href": "Details/assistant.html",
    "title": "Daiil Jun",
    "section": "",
    "text": "University of Kansas | Lawrence, KS PhD Student in Clinical Psychology | 2021 - present\nHandong Global University | Pohang, South Korea BA in Counseling Psychology | 2020"
  },
  {
    "objectID": "Details/assistant.html#education",
    "href": "Details/assistant.html#education",
    "title": "Daiil Jun",
    "section": "",
    "text": "University of Kansas | Lawrence, KS PhD Student in Clinical Psychology | 2021 - present\nHandong Global University | Pohang, South Korea BA in Counseling Psychology | 2020"
  },
  {
    "objectID": "Details/instructor.html",
    "href": "Details/instructor.html",
    "title": "Jeffrey Girard",
    "section": "",
    "text": "University of Kansas | Lawrence, KS Quantitative Area Head | 2022 ‚Äì present E. Wright Assistant Professor | 2020 ‚Äì present\nCarnegie Mellon University | Pittsburgh, PA Postdoctoral Research Fellow | 2018 ‚Äì 2020"
  },
  {
    "objectID": "Details/instructor.html#experience",
    "href": "Details/instructor.html#experience",
    "title": "Jeffrey Girard",
    "section": "",
    "text": "University of Kansas | Lawrence, KS Quantitative Area Head | 2022 ‚Äì present E. Wright Assistant Professor | 2020 ‚Äì present\nCarnegie Mellon University | Pittsburgh, PA Postdoctoral Research Fellow | 2018 ‚Äì 2020"
  },
  {
    "objectID": "Details/instructor.html#education",
    "href": "Details/instructor.html#education",
    "title": "Jeffrey Girard",
    "section": "Education",
    "text": "Education\nUniversity of Pittsburgh | Pittsburgh, PA PhD in Clinical Psychology | 2018\nUniversity of Pittsburgh | Pittsburgh, PA MS in Clinical Psychology | 2013\nUniversity of Washington | Seattle, WA BA in Psychology/Philosophy | 2008"
  },
  {
    "objectID": "Details/recordings.html",
    "href": "Details/recordings.html",
    "title": "Recordings",
    "section": "",
    "text": "Workshop recordings are private YouTube videos. You will be able to access these videos using any platform that can play YouTube videos (e.g., computer, mobile, or even smart TV). However, your YouTube account will need to be granted permission to access them. So please be sure to complete the pre-workshop survey that collects your YouTube account information.\nNote that it takes some time to upload and process the videos on YouTube. A low-quality version will be available relatively soon after upload and a high-quality version will follow soon after (usually within a few hours)."
  },
  {
    "objectID": "Details/recordings.html#day-1-recordings",
    "href": "Details/recordings.html#day-1-recordings",
    "title": "Recordings",
    "section": "Day 1 Recordings",
    "text": "Day 1 Recordings\n\n1A: TBA\n1B: TBA"
  },
  {
    "objectID": "Details/recordings.html#day-2-recordings",
    "href": "Details/recordings.html#day-2-recordings",
    "title": "Recordings",
    "section": "Day 2 Recordings",
    "text": "Day 2 Recordings\n\n2A: TBA\n2B: TBA"
  },
  {
    "objectID": "Details/recordings.html#day-3-recordings",
    "href": "Details/recordings.html#day-3-recordings",
    "title": "Recordings",
    "section": "Day 3 Recordings",
    "text": "Day 3 Recordings\n\n3A: TBA\n3B: TBA"
  },
  {
    "objectID": "Details/schedule.html",
    "href": "Details/schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "This is a three-day workshop where each day runs from 10:30am‚àí3:30pm EDT and is broken into two parts. Part A runs from 10:30am‚àí12:30pm and Part B runs from 1:30am‚àí3:30pm with an hour for lunch between (approximately)."
  },
  {
    "objectID": "Details/schedule.html#day-1-june-5-2023",
    "href": "Details/schedule.html#day-1-june-5-2023",
    "title": "Schedule",
    "section": "Day 1 (June 5, 2023)",
    "text": "Day 1 (June 5, 2023)\nZoom Link: https://us06web.zoom.us/j/83438652943 Zoom Passcode: Please check email or slack Zoom Name: Please set to the name you registered under\n\nPart 1A: Data Wrangling\n\nOverview\nBrief Refresher\nQuarto and Markdown\nWrangling Columns\nWrangling Rows\nPipes and Pipelines\n\n\n\nPart 1B: Data Visualization\n\nGrammar of Graphics\nScatterplots\nAesthetics\nVariation Geoms\nCovariation Geoms\nLayering Geoms"
  },
  {
    "objectID": "Details/schedule.html#day-2-june-6-2023",
    "href": "Details/schedule.html#day-2-june-6-2023",
    "title": "Schedule",
    "section": "Day 2 (June 6, 2023)",
    "text": "Day 2 (June 6, 2023)\nZoom Link: https://us06web.zoom.us/j/83438652943 Zoom Passcode: Please check email or slack Zoom Name: Please set to the name you registered under\n\nPart 2A: Data Wrangling\n\nSummarize\nGrouped Summarize\nGrouped Mutate\nTidy Control Flow\nTidy Selection\nIterating Across\n\n\n\nPart 2B: Data Visualization\n\nScales\nLabels\nThemes\nFacets\nLayouts\nExporting"
  },
  {
    "objectID": "Details/schedule.html#day-3-june-7-2023",
    "href": "Details/schedule.html#day-3-june-7-2023",
    "title": "Schedule",
    "section": "Day 3 (June 7, 2023)",
    "text": "Day 3 (June 7, 2023)\nZoom Link: https://us06web.zoom.us/j/83438652943 Zoom Passcode: Please check email or slack Zoom Name: Please set to the name you registered under\n\nPart 3A: Data Wrangling\n\nSeparate and Unite\nPivot Longer\nPivot Wider\nCombining Tibbles\nRelational Data\nBasic Joins\n\n\n\nPart 3B: Statistics\n\nGeneralized Linear Modeling\nLogistic Regression\nNegative Binomial Regression\nMultilevel Modeling\nRandom intercepts models\nRandom intercepts and slopes models"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Intermediate R for Social Scientists",
    "section": "",
    "text": "A three-day workshop spanning data wrangling, data visualization, and modeling in R. Developed by Jeffrey Girard for the Pittsburgh Summer Methodology Series (June 5‚àí7, 2023).\nR is a popular software option for wrangling, analyzing, and visualizing data in the social, behavioral, and medical sciences. It is completely free, runs on all major platforms (i.e., Windows, Mac, and Linux), offers a rich catalog of methodological tools, and has a large community that supports users at all skill levels.\nThis workshop emphasizes data wrangling (e.g., transforming, reshaping, and merging data) and communication skills (e.g., visualizing data/models and authoring reports) in addition to data analysis skills as the former are critical but often underappreciated.\nThe workshop assumes that attendees have basic knowledge of the R programming language (e.g., how to create objects in the R environment, work with vectors and functions, and import data files as tibbles/data frames). This knowledge is provided by the Introduction to R for Social Scientists workshop for those who need it.\nThis workshop will also discuss how to implement popular extensions to linear modeling, such as GLM (generalized linear modeling, e.g., logistic and poisson regression) and MLM (multilevel modeling, e.g., random intercepts and slopes regression) in R. This part of the workshop could be a nice preview to these techniques for attendees unfamiliar with them but is meant more for those already familiar with their underlying theory (perhaps having learned about them in other software)."
  },
  {
    "objectID": "index.html#frequently-asked-questions",
    "href": "index.html#frequently-asked-questions",
    "title": "Intermediate R for Social Scientists",
    "section": "Frequently Asked Questions",
    "text": "Frequently Asked Questions\n\nWhy enroll in this workshop?\nWhile there are many great educational resources for learning R, including some free video courses and textbooks, this workshop will provide a structured, guided, and communal environment that is tailor-built for researchers in the social, behavioral, and medical sciences. Thus, it emphasizes the concepts and skills most needed by such researchers. In particular, it teaches modern data science techniques using tools from the tidyverse ecosystem (e.g., the dplyr, tidyr, and ggplot2 packages) and statistical techniques using tools from the easystats ecosystem (e.g., the parameters, performance, modelbased, and see packages). The beauty of these tools is that they are both beginner-friendly and scalable to solve more complex problems and interface with more advanced techniques.\n\n\nWill this workshop cover SEM or longitudinal MLM?\nThis workshop will cover how to implement GLM and MLM in R (including simple longitudinal models). However, it will not cover the theory underlying either technique and will not cover structural equation modeling (SEM) at all. For those interested in learning more about the theory of MLM, more advanced longitudinal models, and SEM, please see the Courses page for more workshop options!\n\n\nWhat aspects of Quarto will this workshop cover?\nQuarto is a scientific and technical authoring system that integrates with R and RStudio. It can be used to create reports, blogs, websites, articles, books, slideshows, and posters that seamlessly integrate R code and output with formatted text. This workshop will cover the basics of using Quarto to create scientific reports. More advanced uses of Quarto will be mentioned but not taught."
  }
]